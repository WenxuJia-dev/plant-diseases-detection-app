// Generated by view binder compiler. Do not edit!
package com.tencent.yolov5ncnn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tencent.yolov5ncnn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button AppleDetect;

  @NonNull
  public final Button AppleImage;

  @NonNull
  public final ImageView AppleView;

  @NonNull
  public final Button buttonDetectApple;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ConstraintLayout linearLayout3;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textViewApple1;

  @NonNull
  public final TextView textViewApple2;

  @NonNull
  public final RecyclerView viewOnApple;

  private MainBinding(@NonNull ConstraintLayout rootView, @NonNull Button AppleDetect,
      @NonNull Button AppleImage, @NonNull ImageView AppleView, @NonNull Button buttonDetectApple,
      @NonNull ImageView imageView, @NonNull LinearLayout linearLayout,
      @NonNull ConstraintLayout linearLayout3, @NonNull TextView textView,
      @NonNull TextView textViewApple1, @NonNull TextView textViewApple2,
      @NonNull RecyclerView viewOnApple) {
    this.rootView = rootView;
    this.AppleDetect = AppleDetect;
    this.AppleImage = AppleImage;
    this.AppleView = AppleView;
    this.buttonDetectApple = buttonDetectApple;
    this.imageView = imageView;
    this.linearLayout = linearLayout;
    this.linearLayout3 = linearLayout3;
    this.textView = textView;
    this.textViewApple1 = textViewApple1;
    this.textViewApple2 = textViewApple2;
    this.viewOnApple = viewOnApple;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AppleDetect;
      Button AppleDetect = ViewBindings.findChildViewById(rootView, id);
      if (AppleDetect == null) {
        break missingId;
      }

      id = R.id.AppleImage;
      Button AppleImage = ViewBindings.findChildViewById(rootView, id);
      if (AppleImage == null) {
        break missingId;
      }

      id = R.id.AppleView;
      ImageView AppleView = ViewBindings.findChildViewById(rootView, id);
      if (AppleView == null) {
        break missingId;
      }

      id = R.id.buttonDetect_apple;
      Button buttonDetectApple = ViewBindings.findChildViewById(rootView, id);
      if (buttonDetectApple == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      ConstraintLayout linearLayout3 = (ConstraintLayout) rootView;

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView_apple1;
      TextView textViewApple1 = ViewBindings.findChildViewById(rootView, id);
      if (textViewApple1 == null) {
        break missingId;
      }

      id = R.id.textView_apple2;
      TextView textViewApple2 = ViewBindings.findChildViewById(rootView, id);
      if (textViewApple2 == null) {
        break missingId;
      }

      id = R.id.view_on_apple;
      RecyclerView viewOnApple = ViewBindings.findChildViewById(rootView, id);
      if (viewOnApple == null) {
        break missingId;
      }

      return new MainBinding((ConstraintLayout) rootView, AppleDetect, AppleImage, AppleView,
          buttonDetectApple, imageView, linearLayout, linearLayout3, textView, textViewApple1,
          textViewApple2, viewOnApple);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
